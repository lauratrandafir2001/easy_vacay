version: "3.7"
services:
  app_container:
    build:
      context: .
      dockerfile: Dockerfile
    image: lauraflorina200178/booking-app:latest  # Correctly define the image name and tag
    container_name: booking-app
    env_file:
      - .env
    ports:
      - "6000:6000"
    networks:
      - be-network
    depends_on:
      - mongodb_container
    deploy:
      replicas: 1

  mongodb_container:
    image: mongo:latest
    container_name: booking-local-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: booking
      MONGO_INITDB_ROOT_PASSWORD: booking
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - be-network
      - mongo-network
    deploy:
      replicas: 1

  mongo-express:
    image: mongo-express
    container_name: booking-mongo-express
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://booking:booking@mongodb_container:27017/admin
      ME_CONFIG_MONGODB_ADMINUSERNAME: booking
      ME_CONFIG_MONGODB_ADMINPASSWORD: booking
    ports:
      - "8081:8081"
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - mongo-network
    deploy:
      replicas: 1

  agent:
    image: portainer/agent:2.11.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:2.11.1
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9443:9443"
      - "9000:9000"
      - "8000:8000"
    volumes:
      - portainer_data:/data
    networks:
      - agent_network
    deploy:
      mode: replicated
      replicas: 1

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus-nexporter.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - monitoring
    deploy:
      replicas: 1

  node_exporter:
    image: prom/node-exporter
    deploy:
      mode: global
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - monitoring

networks:
  agent_network:
    driver: overlay
    attachable: true
  be-network:
  mongo-network:
  monitoring:
  internal:

volumes:
  mongodb_data_container:
  portrainer_volume:
  portainer_data:

